{"version":3,"sources":["Components/Navbar/Navbar.jsx","Components/Blog-list/Blog-list.jsx","Hooks/useFetch.jsx","Pages/Home/Home.jsx","Pages/Blogs/Create.jsx","Pages/Blogs/blogDetails.jsx","App.jsx","index.jsx"],"names":["Navbar","className","to","style","backgroundColor","BlogList","blogs","title","refetchBlogs","map","blog","id","author","onClick","fetch","method","headers","then","console","log","useFetch","url","useState","data","setData","pending","setPending","error","setError","reFetch","setReFetch","useEffect","abortCont","AbortController","signal","res","ok","Error","json","catch","err","name","message","abort","get","Home","Create","setTitle","body","setBody","setAuthor","isPending","setIsPending","history","useHistory","onSubmit","e","preventDefault","JSON","stringify","push","type","value","onChange","target","disabled","BlogDetails","useParams","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72a38753.chunk.js","sourcesContent":["import './navbar.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n           <h1> The Blog Post</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\" style={{ backgroundColor:\"#f1356d\"}}>New Blog</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\n// export default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\n\r\nexport const BlogList = ({blogs , title , refetchBlogs}) => {\r\n    // const blogs = props.blogs;\r\n    // const title = props.title;\r\n\r\n    const handelDelete = (id) => {\r\n          fetch(`http://localhost:8000/blogs/${id}` , { \r\n            method: 'DELETE',\r\n            headers: {\"Content-Type\" : \"application/json\"},\r\n        }).then( () => {\r\n            console.log('Deleted');\r\n            refetchBlogs()           \r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"blog-list\">\r\n           <h2> {title} </h2>\r\n            {blogs.map((blog) => (\r\n                <div className=\"blog-preview\" key={blog.id}>\r\n                    <Link to={`/blogs/${blog.id}`}>\r\n                        <h2> {blog.title} </h2>\r\n                        <p> Write by {blog.author} </p>\r\n                    </Link>\r\n                    <button onClick={() => handelDelete(blog.id)}>Delete Blog</button>\r\n                </div>\r\n           ))}\r\n        </div>\r\n     );\r\n}\r\n \r\n// export default BlogList;","\r\nimport {useState , useEffect} from 'react'\r\n\r\nexport const useFetch = (url) => {\r\n    const [data , setData] = useState(null)\r\n    const [pending , setPending] = useState(true)\r\n    const [error , setError] = useState(null)\r\n    const [reFetch , setReFetch] =  useState(false)\r\n\r\n    const get = () => {\r\n        setReFetch(!reFetch)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController()\r\n\r\n        fetch(url , {signal:  abortCont.signal})\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw Error('could not fetch the data  for that resource ')\r\n            }\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n             setPending(false)\r\n             setData(data)\r\n             setError(null)\r\n        }).catch(err => {\r\n            if (err.name === 'AbortError') {\r\n                console.log('fetched aborted');\r\n            } else {\r\n                setPending(false)\r\n                setError(err.message)\r\n            }\r\n        })\r\n\r\n        return () => abortCont.abort()\r\n     },[url , reFetch])\r\n\r\n  return {data , pending , error , get}\r\n     \r\n}\r\n\r\n// export default useFetch;","import './home.css';\r\n// import {useState , useEffect} from 'react'\r\nimport { BlogList } from '../../Components/Blog-list/Blog-list';\r\nimport { useFetch } from '../../Hooks/useFetch';\r\n\r\nexport const Home = () => {\r\n\r\n     const {data : blogs , pending , error , get} = useFetch('http://localhost:8000/blogs')\r\n\r\n    return ( \r\n        <div className=\"content\">\r\n            {error && <div> {error} </div>}\r\n            {pending && <div>loading .....</div>}\r\n            {blogs && <BlogList blogs={blogs} refetchBlogs= {get} title=\"All Blogs!\"/>}\r\n            \r\n            {/* {data && <BlogList blogs={data} title=\"All Blogs!\" handelDelete={handelDelete}/>} */}\r\n        </div>\r\n     );\r\n}\r\n \r\n// export default Home;","import \"./style/create.css\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nexport const Create = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [isPending , setIsPending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handelSubmit  = (e) => {\r\n        e.preventDefault();\r\n        setIsPending(true)\r\n        const blog = { title , body , author}\r\n        fetch('http://localhost:8000/blogs' , { \r\n            method: 'POST',\r\n            headers: {\"Content-Type\" : \"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        }).then( () => {\r\n            setIsPending(false)\r\n            console.log('Add New Blog');\r\n            // history.go(-10)\r\n            history.push('/')\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h2> Add New Blogs</h2>\r\n            <form onSubmit={handelSubmit}>\r\n                <label>Blog Title:</label>\r\n                <input type=\"text\" name=\"title\"\r\n                 value={title}\r\n                 onChange={(e) => setTitle(e.target.value)}\r\n                ></input>\r\n                <label>Blog Body:</label>\r\n                <textarea name=\"body\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)}                \r\n                ></textarea>\r\n                <label>Blog Author:</label>\r\n                <select name=\"author\"\r\n                 value={author}\r\n                 onChange={(e) => setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"abanoub\">Abanoub</option>\r\n                    <option value=\"fam\">Fam</option>\r\n                    <option value=\"marina\">Marina</option>\r\n                </select>\r\n\r\n                {!isPending &&  <button> Add Blog </button>} \r\n                {isPending &&  <button disabled> Adding blog.... </button>} \r\n\r\n            </form>\r\n              <p> { title }  </p>\r\n              <p> {body} </p>\r\n              <p> {author } </p>\r\n        </div>\r\n    );\r\n};\r\n\r\n// export default Create;\r\n","import './style/blogDetails.css';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useFetch } from '../../Hooks/useFetch';\r\nexport const BlogDetails = () => {\r\n\r\n    const { id } = useParams()\r\n    const {data : blog , pending , error} = useFetch('http://localhost:8000/blogs/' + id)\r\n    return (\r\n        <div>\r\n            {error && <div> {error} </div>}\r\n            {pending && <div>loading .....</div>}\r\n            {blog && (\r\n                <article>\r\n                    <h3> { blog.title } </h3>\r\n                    <p> Written by { blog.author } </p>\r\n                    <p> { blog.body } </p>\r\n\r\n                </article>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default BlogDetails;","import './App.css';\nimport { Navbar } from './Components/Navbar/Navbar';\nimport { Home } from './Pages/Home/Home';\nimport { Create } from './Pages/Blogs/Create';\nimport { BlogDetails } from './Pages/Blogs/blogDetails';\nimport {BrowserRouter as Router, Route , Switch} from 'react-router-dom'\n export  const  App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n                <Home/>\n            </Route>\n            <Route  path=\"/create\">\n              <Create />\n            </Route>\n            <Route  path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}